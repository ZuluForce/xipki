<?xml version="1.0" encoding="utf-8"?>
<!--
 Copyright (c) 2014 Lijun Liao
 -->
<xs:schema xmlns="http://xipki.org/qa/certprofile/x509/v1"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:jxb="http://java.sun.com/xml/ns/jaxb"
  targetNamespace="http://xipki.org/qa/certprofile/x509/v1"
   elementFormDefault="qualified" version="1.0" jxb:version="2.0">
  <xs:annotation>
    <xs:appinfo>
      <jxb:schemaBindings>
        <jxb:package name="org.xipki.ca.qa.certprofile.x509.jaxb"/>
      </jxb:schemaBindings>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="x509Profile" type="X509ProfileType"/>
  <xs:complexType name="X509ProfileType">
    <xs:sequence>
      <xs:element name="description" type="xs:string"/>
      <xs:element name="version" type="xs:int">
        <xs:annotation>
          <xs:appinfo>
            <xs:documentation>syntax version, 3 for v3 X509 certificate</xs:documentation>
          </xs:appinfo>
        </xs:annotation>
      </xs:element>
      <xs:element name="signatureAlgorithms" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="algorithm" type="OidWithDescType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ca" type="xs:boolean"/>
      <xs:element name="validity" type="xs:string"/>
      <xs:element name="notBeforeTime" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            Format of the notBefore field.
              current: current time, default
              midnight: mid night, namely 00:00:00 UTC 
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="keyAlgorithms" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="algorithm" type="AlgorithmType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="subject" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="rdn" type="rdnType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="extensions" type="ExtensionsType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AlgorithmType">
    <xs:sequence>
      <xs:element name="algorithm" type="OidWithDescType"/>
      <xs:choice>
        <xs:element name="parameter" type="ParameterType" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="ecParameter" type="ECParameterType" minOccurs="0" maxOccurs="1"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ParameterType">
    <xs:sequence>
      <xs:element name="Min" type="xs:int" minOccurs="0"/>
      <xs:element name="Max" type="xs:int" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          accepted names are 'moduluslength' for RSA,
          'plength' and 'qlength' for DSA
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ECParameterType">
    <xs:sequence>
      <xs:element name="curve" type="curveType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="curveType">
    <xs:sequence>
      <xs:element name="oid" type="OidWithDescType"/>
      <xs:element name="encodings" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="encoding" type="xs:byte" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  first byte of the encoded EC point
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="rdnType">
    <xs:sequence>
      <xs:element name="type" type="OidWithDescType"/>
      <xs:element name="minLen" type="xs:int" minOccurs="0"/>
      <xs:element name="maxLen" type="xs:int" minOccurs="0"/>
      <xs:element name="directoryStringType" type="DirectoryStringType" minOccurs="0"/>
      <xs:element name="regex" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="prefix" type="xs:string" minOccurs="0"/>
      <xs:element name="suffix" type="xs:string" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="minOccurs" type="xs:int" default="1" use="optional"/>
    <xs:attribute name="maxOccurs" type="xs:int" default="1" use="optional"/>
  </xs:complexType>
  <xs:simpleType name="DirectoryStringType">
    <xs:restriction base="xs:normalizedString">
        <xs:enumeration value="teletexString"/>
        <xs:enumeration value="printableString"/>
        <xs:enumeration value="universalString"/>
        <xs:enumeration value="utf8String"/>
        <xs:enumeration value="bmpString"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="ExtensionType">
    <xs:annotation>
      <xs:documentation>
        Critical will be considered if both values (true and false) are allowed,
        otherwise it will be ignored
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="OidWithDescType">
        <xs:attribute name="critical" type="xs:boolean" use="optional"/>
        <xs:attribute name="required" type="xs:boolean" default="false"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ExtensionsType">
    <xs:sequence>
      <xs:element name="extension" type="ExtensionType" maxOccurs="unbounded"/>
      <xs:element name="pathLen" type="xs:int" minOccurs="0"/>
      <xs:element name="authorityKeyIdentifier" minOccurs="0">
        <xs:complexType>
          <xs:all>
            <xs:element name="includeIssuerAndSerial" type="xs:boolean" minOccurs="0"/>
          </xs:all>
        </xs:complexType>
      </xs:element>
      <xs:element name="keyUsage" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="usage" type="KeyUsageType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="certificatePolicies" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="certificatePolicyInformation" type="CertificatePolicyInformationType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="policyMappings" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            Only for CA
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="mapping" type="PolicyIdMappingType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="nameConstraints" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            Only for CA, at least one of permittedSubtrees and excludedSubtrees must be present
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="permittedSubtrees" type="GeneralSubtreesType" minOccurs="0"/>
            <xs:element name="excludedSubtrees" type="GeneralSubtreesType" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="policyConstraints" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            Only for CA, at least one of requireExplicitPolicy and inhibitPolicyMapping must be present
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="requireExplicitPolicy" type="xs:int" minOccurs="0"/>
            <xs:element name="inhibitPolicyMapping" type="xs:int" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="extendedKeyUsage" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Only for CA</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="usage" type="OidWithDescType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="inhibitAnyPolicy" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Only for CA</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="skipCerts" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="admission" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="professionOid" type="OidWithDescType" maxOccurs="unbounded"/>
            <xs:element name="professionItem" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="registrationNumber" type="xs:string" minOccurs="0"/>
            <xs:element name="addProfessionInfo" type="xs:hexBinary" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="subjectAltName" type="generalNameType" minOccurs="0"/>
      <xs:element name="subjectInfoAccess" type="subjectInfoAccessType" minOccurs="0"/>
      <xs:element name="constantExtensions" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="constantExtension" type="ConstantExtensionType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="generalNameType">
    <xs:all>
      <xs:element name="rfc822Name" type="xs:string" minOccurs="0"/>
      <xs:element name="dNSName" type="xs:string" minOccurs="0"/>
      <xs:element name="directoryName" type="xs:string" minOccurs="0"/>
      <xs:element name="ediPartyName" type="xs:string" minOccurs="0"/>
      <xs:element name="uniformResourceIdentifier" type="xs:string" minOccurs="0"/>
      <xs:element name="iPAddress" type="xs:string" minOccurs="0"/>
      <xs:element name="registeredID" type="xs:string" minOccurs="0"/>
      <xs:element name="otherName" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="type" type="OidWithDescType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="PolicyIdMappingType">
    <xs:sequence>
      <xs:element name="issuerDomainPolicy" type="OidWithDescType"/>
      <xs:element name="subjectDomainPolicy" type="OidWithDescType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GeneralSubtreesType">
    <xs:sequence>
      <xs:element name="base" type="GeneralSubtreeBaseType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GeneralSubtreeBaseType">
    <xs:choice>
      <xs:element name="rfc822Name" type="xs:string"/>
      <xs:element name="dNSName" type="xs:string"/>
      <xs:element name="directoryName" type="xs:string"/>
      <xs:element name="uri" type="xs:string"/>
      <xs:element name="ipAddress" type="xs:string"/>
    </xs:choice>
    <xs:attribute name="minimum" type="xs:int" use="optional"/>
    <xs:attribute name="maximum" type="xs:int" use="optional"/>
  </xs:complexType>
  <xs:complexType name="ConstantExtensionType">
    <xs:sequence>
      <xs:element name="type" type="OidWithDescType"/>
      <xs:element name="value" type="xs:base64Binary"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CertificatePolicyInformationType">
    <xs:sequence>
      <xs:element name="policyIdentifier" type="OidWithDescType"/>
      <xs:element name="policyQualifiers" minOccurs="0">
        <xs:complexType>
          <xs:choice maxOccurs="unbounded">
            <xs:element name="cpsUri" type="xs:string"/>
            <xs:element name="userNotice" type="xs:string"/>
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="subjectInfoAccessType">
    <xs:sequence>
      <xs:element name="access" maxOccurs="unbounded">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="accessMethod" type="OidWithDescType"/>
            <xs:element name="accessLocation" type="generalNameType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OidWithDescType">
    <xs:simpleContent>
      <xs:extension base="OidType">
        <xs:attribute name="description" type="xs:string" use="optional"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="OidType">
    <xs:restriction base="xs:token">
      <xs:pattern value="\d+(\.\d+)*"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="KeyUsageType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="DIGITAL_SIGNATURE"/>
      <xs:enumeration value="CONTENT_COMMITMENT"/>
      <xs:enumeration value="KEY_ENCIPHERMENT"/>
      <xs:enumeration value="DATA_ENCIPHERMENT"/>
      <xs:enumeration value="KEY_AGREEMENT"/>
      <xs:enumeration value="KEYCERT_SIGN"/>
      <xs:enumeration value="CRL_SIGN"/>
      <xs:enumeration value="ENCIPHER_ONLY"/>
      <xs:enumeration value="DECIPHER_ONLY"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>
